import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Scanner;

class Book {
    private String title;
    private String author;
    private boolean available;

    public Book(String title, String author) {
        this.title = title;
        this.author = author;
        this.available = true;
    }

    public String getTitle() {
        return title;
    }

    public String getAuthor() {
        return author;
    }

    public boolean isAvailable() {
        return available;
    }

    public void setAvailable(boolean available) {
        this.available = available;
    }
}

class Library {
    private Map<String, Book> books;

    public Library() {
        this.books = new HashMap<>();
    }

    public void addBook(String title, String author) {
        books.put(title, new Book(title, author));
    }

    public boolean borrowBook(String title) {
        Book book = books.get(title);
        if (book != null && book.isAvailable()) {
            book.setAvailable(false);
            return true;
        }
        return false;
    }

    public boolean returnBook(String title) {
        Book book = books.get(title);
        if (book != null && !book.isAvailable()) {
            book.setAvailable(true);
            return true;
        }
        return false;
    }

    public List<Book> searchBooksByAuthor(String author) {
        List<Book> result = new ArrayList<>();
        for (Book book : books.values()) {
            if (book.getAuthor().equalsIgnoreCase(author)) {
                result.add(book);
            }
        }
        return result;
    }

    public List<Book> searchBooksByTitle(String title) {
        List<Book> result = new ArrayList<>();
        for (Book book : books.values()) {
            if (book.getTitle().equalsIgnoreCase(title)) {
                result.add(book);
            }
        }
        return result;
    }
}

public class Main{
    public static void main(String[] args) {
        Library library = new Library();
        library.addBook("Java Programming", "John Doe");
        library.addBook("Python Basics", "Jane Smith");
        library.addBook("Data Structures", "Alice Johnson");

        Scanner scanner = new Scanner(System.in);

        while (true) {
            System.out.println("\nWelcome to Library Management System");
            System.out.println("1. Borrow a book");
            System.out.println("2. Return a book");
            System.out.println("3. Search books by title");
            System.out.println("4. Search books by author");
            System.out.println("5. Exit");

            System.out.print("Enter your choice: ");
            int choice = scanner.nextInt();
            scanner.nextLine(); // Consume newline

            switch (choice) {
                case 1:
                    System.out.print("Enter the title of the book you want to borrow: ");
                    String borrowTitle = scanner.nextLine();
                    if (library.borrowBook(borrowTitle)) {
                        System.out.println("Book borrowed successfully.");
                    } else {
                        System.out.println("Book not available or not found.");
                    }
                    break;
                case 2:
                    System.out.print("Enter the title of the book you want to return: ");
                    String returnTitle = scanner.nextLine();
                    if (library.returnBook(returnTitle)) {
                        System.out.println("Book returned successfully.");
                    } else {
                        System.out.println("Book not borrowed or not found.");
                    }
                    break;
                case 3:
                    System.out.print("Enter the title of the book you want to search: ");
                    String searchTitle = scanner.nextLine();
                    List<Book> titleSearchResults = library.searchBooksByTitle(searchTitle);
                    if (titleSearchResults.isEmpty()) {
                        System.out.println("No books found with the given title.");
                    } else {
                        System.out.println("Books found with the given title:");
                        for (Book book : titleSearchResults) {
                            System.out.println(book.getTitle() + " by " + book.getAuthor());
                        }
                    }
                    break;
                case 4:
                    System.out.print("Enter the author name you want to search: ");
                    String searchAuthor = scanner.nextLine();
                    List<Book> authorSearchResults = library.searchBooksByAuthor(searchAuthor);
                    if (authorSearchResults.isEmpty()) {
                        System.out.println("No books found by the given author.");
                    } else {
                        System.out.println("Books found by the given author:");
                        for (Book book : authorSearchResults) {
                            System.out.println(book.getTitle() + " by " + book.getAuthor());
                        }
                    }
                    break;
                case 5:
                    System.out.println("Thank you for using Library Management System.");
                    scanner.close();
                    System.exit(0);
                default:
                    System.out.println("Invalid choice. Please enter a number between 1 and 5.");
            }
        }
    }
}
